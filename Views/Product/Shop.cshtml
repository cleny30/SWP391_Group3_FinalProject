@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout_Main.cshtml";


    var productsToShow = ViewBag.list as List<SWP391_Group3_FinalProject.Models.Product>;

    // Lấy trang hiện tại từ query string hoặc mặc định là trang đầu tiên
    var currentPage = Context.Request.Query["page"].ToString() != "" ? Convert.ToInt32(Context.Request.Query["page"]) : 1;

    // Kích thước trang (số sản phẩm mỗi trang)
    int pageSize = 9;

    // Tính chỉ số bắt đầu của sản phẩm cần hiển thị
    int startIndex = (currentPage - 1) * pageSize;


    //TODO Filter
    #region fillter
    var SelectedCategory = Context.Request.Query["category"].ToString().Split(',');
    var SelectedBrand = Context.Request.Query["brand"].ToString().Split(',');
    var selectedCategoryIds = new List<int>();
    var selectedBrandIds = new List<int>();

    //Filter by category
    if (SelectedCategory.Length > 0 && !SelectedCategory.Equals(""))
    {
        foreach (var category in SelectedCategory)
        {
            if (int.TryParse(category, out int parsedCategory))
            {
                selectedCategoryIds.Add(parsedCategory);
            }
            else
            {
                // Handle invalid category value (e.g., log an error, skip, or take appropriate action)
                Console.WriteLine("Invalid Category: " + category);
            }
        }

    }
    var productsByCategory = productsToShow.Where(pro => selectedCategoryIds.Contains(pro.cate_id)).ToList();

    //Filter by brand
    if (SelectedBrand.Length > 0 && !SelectedBrand.Equals(""))
    {
        foreach (var category in SelectedBrand)
        {
            if (int.TryParse(category, out int parsedCategory))
            {
                selectedBrandIds.Add(parsedCategory);
            }
            else
            {
                // Handle invalid category value (e.g., log an error, skip, or take appropriate action)
                Console.WriteLine("Invalid Category: " + category);
            }
        }

    }
    var productsByBrand = productsToShow.Where(pro => selectedBrandIds.Contains(pro.brand_id)).ToList();


    #endregion
    //END
    #region Displaylist
    // Lấy danh sách sản phẩm để hiển thị trên trang hiện tại
    var list = productsToShow.Skip(startIndex).Take(pageSize);

    var combineProduct = Enumerable.Empty<SWP391_Group3_FinalProject.Models.Product>();
    if (productsByCategory.Count() > 0 && productsByBrand.Count() > 0)
    {
        combineProduct = productsByBrand.Intersect(productsByCategory);
    }
    else if (productsByCategory.Count() > 0)
    {
        combineProduct = productsByCategory;
    }
    else if (productsByBrand.Count() > 0)
    {
        combineProduct = productsByBrand;
    }


    if (combineProduct.Count() > 0)
    {
        list = combineProduct.Skip(startIndex).Take(pageSize);
    }
    else if (combineProduct.Count() == 0 && (selectedBrandIds.Count() > 0 || selectedCategoryIds.Count() > 0))
    {
        list = null;
    }

    #endregion

}


<!-- Breadcrumb Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-12">
            <nav class="breadcrumb bg-light mb-30">
                <a class="breadcrumb-item text-dark" href="#">Home</a>
                <a class="breadcrumb-item text-dark" href="#">Shop</a>
                <span class="breadcrumb-item active">Shop List</span>
            </nav>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->
<!-- Shop Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <!-- Shop Sidebar Start -->
        <div class="col-lg-3 col-md-4">

            @if (selectedBrandIds.Count() > 0 || selectedCategoryIds.Count()>0)
            {
                <!-- Fillter Choosen -->
                <h5 class="section-title position-relative text-uppercase mb-3">
                    <span class="bg-secondary pr-3">
                        Used filter
                    </span>
                </h5>
                <div class="bg-light p-4 mb-30">
                    <div class="list-used-filter">
                        @{
                            var filterCateUsed = new List<string>();
                            foreach (var category in ViewBag.cateList)
                            {
                                if (selectedCategoryIds.Contains(category.cate_id))
                                {
                                    filterCateUsed.Add(category.cate_name);
                                }
                            }

                            var filterBrandUsed = new List<string>();
                            foreach (var brand in ViewBag.brandList)
                            {
                                if (selectedBrandIds.Contains(brand.brand_id))
                                {
                                    filterBrandUsed.Add(brand.brand_name);
                                }
                            }
                        }
                        <!--Start Display used filter-->
                        @if (filterCateUsed.Count() > 0)
                        {
                            @for (int i = 0; i < filterCateUsed.Count(); i++)
                            {
                                <div class="element-used-filter" data-cateFilter="@selectedCategoryIds[i]" onclick="RemoveUsedFilter(this, @(i+1))">
                                    <div class="name-filter">@filterCateUsed[i]</div>
                                    <ion-icon name="close-circle-outline" class="icon-delete"></ion-icon>
                                </div>
                            }
                        }
                        @if (filterBrandUsed.Count() > 0)
                        {
                            @for (int i = 0; i < filterBrandUsed.Count(); i++)
                            {
                                <div class="element-used-filter" data-brandFilter="@selectedBrandIds[i]" onclick="RemoveUsedFilter(this, @(i+1))">
                                    <div class="name-filter">@filterBrandUsed[i]</div>
                                    <ion-icon name="close-circle-outline" class="icon-delete"></ion-icon>
                                </div>
                            }

                        }
                        <!--End Display used filter-->

                    </div>
                    <div class="remove-filter">
                        <a href="/Product/Shop">Remove all used filter</a>
                    </div>
                </div>
                <!-- Fillter Choosen -->
            }

            <!-- Categories Start -->
            <h5 class="section-title position-relative text-uppercase mb-3">
                <span class="bg-secondary pr-3">
                    Filter
                    by Categories
                </span>
            </h5>
            <div class="bg-light p-4 mb-30">
                <form>
                    @foreach (var item in ViewBag.cateList)
                    {
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="checkbox" class="custom-control-input" id="cat-@item.cate_id" value="@item.cate_id" @(selectedCategoryIds.Contains(item.cate_id) ? "checked" : "")>
                            <label class="custom-control-label" for="cat-@item.cate_id">@item.cate_name</label>
                            <span class="badge border font-weight-normal">150</span>
                        </div>
                    }

                </form>
            </div>
            <!-- Categories End -->
            <!-- Brand Start -->
            <h5 class="section-title position-relative text-uppercase mb-3">
                <span class="bg-secondary pr-3">
                    Filter
                    by Brand
                </span>
            </h5>
            <div class="bg-light p-4 mb-30">
                <form>
                    @foreach (var item in ViewBag.brandList)
                    {
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="checkbox" class="custom-control-input" id="brand-@item.brand_id" value="@item.brand_id" @(selectedBrandIds.Contains(item.brand_id) ? "checked" : "")>
                            <label class="custom-control-label" for="brand-@item.brand_id">@item.brand_name</label>
                            <span class="badge border font-weight-normal">150</span>
                        </div>
                    }

                </form>
            </div>
            <!-- Brand End -->
        </div>
        <!-- Shop Sidebar End -->
        <!-- Shop Product Start -->
        <div class="col-lg-9 col-md-8">
            <div class="row pb-3">
                <div class="col-12 pb-1">
                    <div class="d-flex align-items-center justify-content-between mb-4">
                        <div>
                        </div>
                        <div class="ml-2">
                            <div class="btn-group">
                                <button type="button" class="btn btn-sm btn-light dropdown-toggle"
                                        data-toggle="dropdown">
                                    Showing
                                </button>
                                <div class="dropdown-menu dropdown-menu-right">
                                    <a class="dropdown-item" href="#">Latest</a>
                                    <a class="dropdown-item" href="#">Popularity</a>
                                    <a class="dropdown-item" href="#">Best Rating</a>
                                </div>
                            </div>
                            <div class="btn-group ml-2">
                                <button type="button" class="btn btn-sm btn-light dropdown-toggle"
                                        data-toggle="dropdown">
                                    Sorting by Price
                                </button>
                                <div class="dropdown-menu dropdown-menu-right">
                                    <a class="dropdown-item" href="#">Highest</a>
                                    <a class="dropdown-item" href="#">Lowest</a>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @if (list == null)
                {
                    <h2>Cook</h2>

                }
                else
                {
                    @foreach (var item in list)
                    {
                        <div class="col-lg-4 col-md-6 col-sm-6 pb-1">
                            <div class="product-item bg-light mb-4">
                                <div class="product-img position-relative overflow-hidden">
                                    <img class="img-fluid w-100" src="@item.pro_img[0]" alt="@item.pro_name">
                                    <div class="product-action">
                                        <a class="btn btn-outline-dark btn-square" href="">
                                            <i class="fa fa-shopping-cart"></i>
                                        </a>

                                        <a class="btn btn-outline-dark btn-square" href=""><i class="fa fa-search"></i></a>
                                    </div>
                                </div>
                                <div class="text-center py-4">
                                    <a class="h6 text-decoration-none text-truncate" href="">@item.pro_name</a>
                                    <div class="d-flex align-items-center justify-content-center mt-2">

                                        @if (item.discount > 0)
                                        {
                                            var priceDiscount = @item.pro_price - (@item.pro_price * @item.discount) / 100;
                                            <h5>$@priceDiscount</h5>
                                            <h6 class="text-muted ml-2"><del>$@item.pro_price</del></h6>
                                        }
                                        else
                                        {
                                            <h5>$@item.pro_price</h5>
                                        }
                                    </div>
                                    <div class="d-flex align-items-center justify-content-center mb-1">
                                        <small class="fa fa-star text-primary mr-1"></small>
                                        <small class="fa fa-star text-primary mr-1"></small>
                                        <small class="fa fa-star text-primary mr-1"></small>
                                        <small class="fa fa-star text-primary mr-1"></small>
                                        <small class="fa fa-star text-primary mr-1"></small>
                                        <small>(99)</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="col-12">
                        <nav>
                            <ul class="pagination justify-content-center">

                                @if (selectedBrandIds.Count == 0 && selectedCategoryIds.Count == 0)
                                {
                                    @if (currentPage == 1)
                                    {
                                        <li class="page-item disabled">
                                            <span class="page-link">Previous</span>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="?page=@(currentPage - 1)">Previous</a>
                                        </li>
                                    }

                                    @for (var i = 1; i <= Math.Ceiling((double)ViewBag.list.Count / pageSize); i++)
                                    {
                                        <li class="page-item @(i == currentPage ? "active" : "")">
                                            <a class="page-link" href="?page=@i">@i</a>
                                        </li>
                                    }

                                    if (currentPage == Math.Ceiling((double)ViewBag.list.Count / pageSize))
                                    {
                                        <li class="page-item disabled">
                                            <span class="page-link">Next</span>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item"><a class="page-link" href="?page=@(int.Parse((currentPage + 1).ToString()))">Next</a></li>
                                    }

                                }
                                else
                                {
                                    @if (currentPage == 1)
                                    {
                                        <li class="page-item disabled">
                                            <span class="page-link">Previous</span>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="?category=@string.Join(",", SelectedCategory)&brand=@string.Join(",", SelectedBrand)&page=@(currentPage - 1)">Previous</a>
                                        </li>
                                    }

                                    @for (var i = 1; i <= Math.Ceiling((double)combineProduct.Count() / pageSize); i++)
                                    {
                                        <li class="page-item @(i == currentPage ? "active" : "")">
                                            <a class="page-link" href="?category=@string.Join(",", SelectedCategory)&brand=@string.Join(",", SelectedBrand)&page=@i">@i</a>
                                        </li>
                                    }

                                    if (currentPage == Math.Ceiling((double)combineProduct.Count() / pageSize))
                                    {
                                        <li class="page-item disabled">
                                            <span class="page-link">Next</span>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item"><a class="page-link" href="?category=@string.Join(",", SelectedCategory)&brand=@string.Join(",", SelectedBrand)&page=@(int.Parse((currentPage + 1).ToString()))">Next</a></li>
                                    }


                                }

                            </ul>
                        </nav>
                    </div>
                }


            </div>
        </div>
        <!-- Shop Product End -->
    </div>
</div>
<!-- Shop End -->
<script src="~/js/shop.js"></script>
