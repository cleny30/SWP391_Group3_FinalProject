@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout_Main.cshtml";

    var selectedBrandIds = ViewBag.selectedBrandIds as List<int>;
    var selectedCategoryIds = ViewBag.selectedCategoryIds as List<int>;
    var selectedSort = ViewBag.sort;
    var currentPage = ViewBag.currentPage;
    var pageSize = ViewBag.pageSize;
    var list = ViewBag.list;
}


<!-- Breadcrumb Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-12">
            <nav class="breadcrumb bg-light mb-30">
                <a class="breadcrumb-item text-dark" href="#">Home</a>
                <a class="breadcrumb-item text-dark" href="#">Shop</a>
                <span class="breadcrumb-item active">Shop List</span>
            </nav>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->
<!-- Shop Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <!-- Shop Sidebar Start -->
        <div class="col-lg-3 col-md-4">

            @if (selectedBrandIds != null && selectedBrandIds.Count() > 0 ||
            selectedCategoryIds != null && selectedCategoryIds.Count() > 0 ||
            !selectedSort.Equals("") && selectedSort.Length > 0
            )
            {
                <!-- Fillter Choosen -->
                <h5 class="section-title position-relative text-uppercase mb-3">
                    <span class="bg-secondary pr-3">
                        Used filter
                    </span>
                </h5>
                <div class="bg-light p-4 mb-30">
                    <div class="list-used-filter">
                        @{
                            var filterCateUsed = new List<string>();
                            foreach (var category in ViewBag.cateList)
                            {
                                if (selectedCategoryIds.Contains(category.cate_id))
                                {
                                    filterCateUsed.Add(category.cate_name);
                                }
                            }

                            var filterBrandUsed = new List<string>();
                            foreach (var brand in ViewBag.brandList)
                            {
                                if (selectedBrandIds.Contains(brand.brand_id))
                                {
                                    filterBrandUsed.Add(brand.brand_name);
                                }
                            }
                        }

                        @if (!selectedSort.Equals("") && selectedSort.Length > 0)
                        {
                            <div class="element-used-filter" data-sortFilter="@ViewBag.sort" onclick="RemoveUsedFilter(this, 1)">
                                <div class="name-filter">@ViewBag.sort</div>
                                <ion-icon name="close-circle-outline" class="icon-delete"></ion-icon>
                            </div>
                        }

                        <!--Start Display used filter-->
                        @if (filterCateUsed.Count() > 0)
                        {
                            @for (int i = 0; i < filterCateUsed.Count(); i++)
                            {
                                <div class="element-used-filter" data-cateFilter="@selectedCategoryIds[i]" onclick="RemoveUsedFilter(this, @(i+1))">
                                    <div class="name-filter">@filterCateUsed[i]</div>
                                    <ion-icon name="close-circle-outline" class="icon-delete"></ion-icon>
                                </div>
                            }
                        }
                        @if (filterBrandUsed.Count() > 0)
                        {
                            @for (int i = 0; i < filterBrandUsed.Count(); i++)
                            {
                                <div class="element-used-filter" data-brandFilter="@selectedBrandIds[i]" onclick="RemoveUsedFilter(this, @(i+1))">
                                    <div class="name-filter">@filterBrandUsed[i]</div>
                                    <ion-icon name="close-circle-outline" class="icon-delete"></ion-icon>
                                </div>
                            }

                        }


                        <!--End Display used filter-->

                    </div>
                    <div class="remove-filter">
                        <a href="/Product/Shop">Remove all used filter</a>
                    </div>
                </div>
                <!-- Fillter Choosen -->
            }

            <!-- Popularity Start -->
            <h5 class="section-title position-relative text-uppercase mb-3">
                <span class="bg-secondary pr-3">
                    Filter
                    by Popularity
                </span>
            </h5>
            <div class="bg-light p-4 mb-30">
                <form>

                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" class="custom-control-input shop" id="sort-discount" value="discount" @(selectedSort.Contains("discount") ? "checked" : "")>
                        <label class="custom-control-label" for="sort-discount">On Sale</label>
                        <span class="badge border font-weight-normal">@ViewBag.totalProductOnsale</span>
                    </div>

                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" class="custom-control-input shop" id="sort-best_selling" value="best_selling" @(selectedSort.Contains("best_selling") ? "checked" : "")>
                        <label class="custom-control-label" for="sort-best_selling">Best Selling</label>
                        <span class="badge border font-weight-normal">150</span>
                    </div>

                </form>
            </div>
            <!-- Popularity End -->
            <!-- Categories Start -->
            <h5 class="section-title position-relative text-uppercase mb-3">
                <span class="bg-secondary pr-3">
                    Filter
                    by Categories
                </span>
            </h5>
            <div class="bg-light p-4 mb-30">
                <form>
                    @{
                        int index = 0;
                    }
                    @foreach (var item in ViewBag.cateList)
                    {
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="checkbox" class="custom-control-input shop" id="cat-@item.cate_id" value="@item.cate_id" @(selectedCategoryIds.Contains(item.cate_id) ? "checked" : "")>
                            <label class="custom-control-label" for="cat-@item.cate_id">@item.cate_name</label>
                            <span class="badge border font-weight-normal">@ViewBag.totalProductCate[index]</span>
                        </div>
                        index++;
                    }

                </form>
            </div>
            <!-- Categories End -->
            <!-- Brand Start -->
            <h5 class="section-title position-relative text-uppercase mb-3">
                <span class="bg-secondary pr-3">
                    Filter
                    by Brand
                </span>
            </h5>
            <div class="bg-light p-4 mb-30">
                <form>
                    @{
                        index = 0;
                    }
                    @foreach (var item in ViewBag.brandList)
                    {
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="checkbox" class="custom-control-input shop" id="brand-@item.brand_id" value="@item.brand_id" @(selectedBrandIds.Contains(item.brand_id) ? "checked" : "")>
                            <label class="custom-control-label" for="brand-@item.brand_id">@item.brand_name</label>
                            <span class="badge border font-weight-normal">@ViewBag.totalProductBrand[index]</span>
                        </div>
                        index++;
                    }

                </form>
            </div>
            <!-- Brand End -->
        </div>
        <!-- Shop Sidebar End -->
        <!-- Shop Product Start -->
        <div class="col-lg-9 col-md-8">
            <div class="row pb-3">
                <div class="col-12 pb-1">
                    <div class="d-flex align-items-center justify-content-between mb-4">
                        <div>
                        </div>
                        <div class="ml-2">
                            @{
                                var order = Context.Request.Query["order"].ToString();
                                if (!string.IsNullOrEmpty(order))
                                {
                                    string result = char.ToUpper(order[0]) + order.Substring(1);
                                    string bold = "font-weight-bold";
                                    <div class="btn-group ml-2">
                                        <button type="button" class="btn btn-sm btn-light dropdown-toggle"
                                                data-toggle="dropdown">
                                            Sorting: <span id="sort-order" class="font-weight-bold">@result</span>
                                        </button>
                                        <div class="dropdown-menu dropdown-menu-right">
                                            <span id="sort-standout " class="dropdown-item" onclick="Order(this)" data-order="standout">Standout</span>
                                            <span id="sort-highest" class="dropdown-item @(order.Equals("highest")?bold:"")" onclick="Order(this)" data-order="highest">Highest</span>
                                            <span id="sort-lowest" class="dropdown-item @(order.Equals("lowest")?bold:"")" onclick="Order(this)" data-order="lowest">Lowest</span>

                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="btn-group ml-2">
                                        <button type="button" class="btn btn-sm btn-light dropdown-toggle"
                                                data-toggle="dropdown">
                                            Sorting: <span id="sort-order" class="font-weight-bold">Standout</span>
                                        </button>
                                        <div class="dropdown-menu dropdown-menu-right">
                                            <span id="sort-standout " class="dropdown-item font-weight-bold" onclick="Order(this)" data-order="standout">Standout</span>
                                            <span id="sort-highest" class="dropdown-item" onclick="Order(this)" data-order="highest">Highest</span>
                                            <span id="sort-lowest" class="dropdown-item" onclick="Order(this)" data-order="lowest">Lowest</span>
                                        </div>
                                    </div>
                                }
                            }

                        </div>
                    </div>
                </div>

                @if (list == null)
                {
                    <div class="col-12 text-center">
                        <p style="font-size: 30px; color: black">There are no products available</p>
                    </div>
                }
                else
                {
                    @foreach (var item in list)
                    {
                        <div class="col-lg-4 col-md-6 col-sm-6 pb-1">
                            <div class="product-item bg-light mb-4">
                                <div class="product-img position-relative overflow-hidden">
                                    <img class="img-fluid w-100" src="@item.pro_img[0]" alt="@item.pro_name">
                                    <div class="product-action">
                                        <a class="btn btn-outline-dark btn-square" data-pro_id="@item.pro_id" onclick="AddToCart(this)">
                                            <i class="fa fa-shopping-cart"></i>
                                        </a>
                                        <a class="btn btn-outline-dark btn-square" href="/Product/ShopDetail?pro_id=@item.pro_id"><i class="fa fa-search"></i></a>
                                    </div>
                                </div>
                                <div class="text-center py-4">
                                    <a class="h6 text-decoration-none text-truncate" href="">@item.pro_name</a>
                                    <div class="d-flex align-items-center justify-content-center mt-2">

                                        @if (item.discount > 0)
                                        {
                                            var priceDiscount = @item.pro_price - (@item.pro_price * @item.discount) / 100;
                                            priceDiscount = Math.Round(priceDiscount, 2);
                                            <h5>$@priceDiscount</h5>
                                            <h6 class="text-muted ml-2"><del>$@item.pro_price</del></h6>
                                        }
                                        else
                                        {
                                            <h5>$@item.pro_price</h5>
                                        }
                                    </div>
                                    <div class="d-flex align-items-center justify-content-center mb-1">
                                        <small class="fa fa-star text-primary mr-1"></small>
                                        <small class="fa fa-star text-primary mr-1"></small>
                                        <small class="fa fa-star text-primary mr-1"></small>
                                        <small class="fa fa-star text-primary mr-1"></small>
                                        <small class="fa fa-star text-primary mr-1"></small>
                                        <small>(99)</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="col-12">
                        <nav>
                            <ul class="pagination justify-content-center">


                                <li class="page-item @(ViewBag.IsFirstPage ? "disabled" : "")">
                                    @if (ViewBag.IsFirstPage)
                                    {
                                        <span class="page-link">Previous</span>
                                    }
                                    else
                                    {
                                        <a class="page-link" href="@BuildPageUrl(ViewBag.CurrentPage - 1)">Previous</a>
                                    }
                                </li>

                                @for (var i = 1; i <= ViewBag.TotalPages; i++)
                                {
                                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                        <a class="page-link" href="@BuildPageUrl(i)">@i</a>
                                    </li>
                                }

                                <li class="page-item @(ViewBag.IsLastPage ? "disabled" : "")">
                                    @if (ViewBag.IsLastPage)
                                    {
                                        <span class="page-link">Next</span>
                                    }
                                    else
                                    {
                                        <a class="page-link" href="@BuildPageUrl(ViewBag.CurrentPage + 1)">Next</a>
                                    }
                                </li>

                                @functions {
                                private string BuildPageUrl(int page)
                                {
                                    // Initialize a list to store non-empty parameters
                                    var parameters = new List<string>();

                                    // Add category parameter if selected
                                    if (ViewBag.selectedCategoryIds != null && ViewBag.selectedCategoryIds.Count > 0)
                                        parameters.Add($"category={string.Join("&category=", ViewBag.selectedCategoryIds)}");

                                    // Add brand parameter if selected
                                    if (ViewBag.selectedBrandIds != null && ViewBag.selectedBrandIds.Count > 0)
                                        parameters.Add($"brand={string.Join("&brand=", ViewBag.selectedBrandIds)}");

                                    // Add page, sort, and order parameters if they have values
                                    if (!string.IsNullOrEmpty(ViewBag.sort))
                                        parameters.Add($"sort={ViewBag.sort}");

                                    if (!string.IsNullOrEmpty(ViewBag.order))
                                        parameters.Add($"order={ViewBag.order}");

                                    // Add page parameter
                                    parameters.Add($"page={page}");

                                    // Combine with the base URL
                                    return ViewBag.url + "?" + string.Join("&", parameters);
                                }

                            }
                        </ul>
                    </nav>
                </div>
                }
            </div>
        </div>
        <!-- Shop Product End -->
    </div>
</div>
<!-- Shop End -->

<link href="~/css/checked.css" rel="stylesheet" />

<!--Pop up Add to cart successful-->
<div id="myModal-check" class="modal-check">

    <!-- Modal content -->
    <div class="modal-content-check">
        <div class="wrapper-check">
            <div class="tick-check"></div>
        </div>
        <p>The product has been added to Cart</p>
    </div>

</div>